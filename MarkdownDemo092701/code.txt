```
+ (NSString *)HTMLStringWithMarkdown:(NSString *)string extensions:(MMMarkdownExtensions)extensions fromSelector:(SEL)selector error:(__autoreleasing NSError **)error
{
    if (string == nil)
    {
        NSString *reason = [NSString stringWithFormat:@"[%@ %@]: nil argument for markdown",
        NSStringFromClass(self.class), NSStringFromSelector(selector)];
        @throw [NSException exceptionWithName:NSInvalidArgumentException reason:reason userInfo:nil];
    }

    if (string.length == 0)
        return @"";

    MMParser    *parser    = [[MMParser alloc] initWithExtensions:extensions];
    MMGenerator *generator = [MMGenerator new];

    MMDocument *document = [parser parseMarkdown:string error:error];
    if (!document)
        return nil;

    return [generator generateHTML:document];
}
```